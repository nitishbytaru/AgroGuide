{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model Accuracy: 99.32%\n",
      "Model, label encoder, and scaler saved successfully.\n",
      "Manual Test Prediction: pigeonpeas\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\b_nitish_durga\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\sklearn\\utils\\validation.py:2739: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "from sklearn.preprocessing import LabelEncoder, StandardScaler\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import accuracy_score\n",
    "import joblib\n",
    "\n",
    "# Load the dataset\n",
    "df = pd.read_csv(\"Crop_recommendation.csv\")\n",
    "\n",
    "# Check for missing values\n",
    "df = df.dropna()\n",
    "\n",
    "# Define features and target\n",
    "features = [\"N\", \"P\", \"K\", \"temperature\", \"humidity\", \"ph\", \"rainfall\"]\n",
    "y = df[\"label\"]\n",
    "\n",
    "# Encode labels\n",
    "label_encoder = LabelEncoder()\n",
    "y = label_encoder.fit_transform(y)\n",
    "\n",
    "# Standardize features\n",
    "scaler = StandardScaler()\n",
    "df[features] = scaler.fit_transform(df[features])\n",
    "\n",
    "# Split dataset\n",
    "X_train, X_test, y_train, y_test = train_test_split(df[features], y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Train model\n",
    "model = RandomForestClassifier(n_estimators=100, random_state=42)\n",
    "model.fit(X_train, y_train)\n",
    "\n",
    "# Evaluate model\n",
    "y_pred = model.predict(X_test)\n",
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "print(f\"Model Accuracy: {accuracy * 100:.2f}%\")\n",
    "\n",
    "# Save model and encoders\n",
    "joblib.dump(model, \"crop_prediction_model.pkl\")\n",
    "joblib.dump(label_encoder, \"label_encoder.pkl\")\n",
    "joblib.dump(scaler, \"scaler.pkl\")\n",
    "print(\"Model, label encoder, and scaler saved successfully.\")\n",
    "\n",
    "# Manually input test values\n",
    "manual_input = {\n",
    "    \"N\": 5,\n",
    "    \"P\": 62,\n",
    "    \"K\": 23,\n",
    "    \"temperature\": 27,\n",
    "    \"humidity\": 66,\n",
    "    \"ph\": 4.2,\n",
    "    \"rainfall\": 148\n",
    "}\n",
    "\n",
    "# Convert input to DataFrame and standardize it\n",
    "manual_input_df = pd.DataFrame([manual_input])\n",
    "manual_input_scaled = scaler.transform(manual_input_df)\n",
    "\n",
    "# Make prediction\n",
    "predicted_label = model.predict(manual_input_scaled)[0]\n",
    "predicted_crop = label_encoder.inverse_transform([predicted_label])[0]\n",
    "print(\"Manual Test Prediction:\", predicted_crop)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>N</th>\n",
       "      <th>P</th>\n",
       "      <th>K</th>\n",
       "      <th>temperature</th>\n",
       "      <th>humidity</th>\n",
       "      <th>ph</th>\n",
       "      <th>rainfall</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>90</td>\n",
       "      <td>42</td>\n",
       "      <td>43</td>\n",
       "      <td>20.879744</td>\n",
       "      <td>82.002744</td>\n",
       "      <td>6.502985</td>\n",
       "      <td>202.935536</td>\n",
       "      <td>rice</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>85</td>\n",
       "      <td>58</td>\n",
       "      <td>41</td>\n",
       "      <td>21.770462</td>\n",
       "      <td>80.319644</td>\n",
       "      <td>7.038096</td>\n",
       "      <td>226.655537</td>\n",
       "      <td>rice</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>60</td>\n",
       "      <td>55</td>\n",
       "      <td>44</td>\n",
       "      <td>23.004459</td>\n",
       "      <td>82.320763</td>\n",
       "      <td>7.840207</td>\n",
       "      <td>263.964248</td>\n",
       "      <td>rice</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>74</td>\n",
       "      <td>35</td>\n",
       "      <td>40</td>\n",
       "      <td>26.491096</td>\n",
       "      <td>80.158363</td>\n",
       "      <td>6.980401</td>\n",
       "      <td>242.864034</td>\n",
       "      <td>rice</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>78</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>20.130175</td>\n",
       "      <td>81.604873</td>\n",
       "      <td>7.628473</td>\n",
       "      <td>262.717340</td>\n",
       "      <td>rice</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    N   P   K  temperature   humidity        ph    rainfall label\n",
       "0  90  42  43    20.879744  82.002744  6.502985  202.935536  rice\n",
       "1  85  58  41    21.770462  80.319644  7.038096  226.655537  rice\n",
       "2  60  55  44    23.004459  82.320763  7.840207  263.964248  rice\n",
       "3  74  35  40    26.491096  80.158363  6.980401  242.864034  rice\n",
       "4  78  42  42    20.130175  81.604873  7.628473  262.717340  rice"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "newdf = pd.read_csv(\"Crop_recommendation.csv\")\n",
    "\n",
    "newdf.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of unique crops: 22\n",
      "List of unique crops:\n",
      "['rice' 'maize' 'chickpea' 'kidneybeans' 'pigeonpeas' 'mothbeans'\n",
      " 'mungbean' 'blackgram' 'lentil' 'pomegranate' 'banana' 'mango' 'grapes'\n",
      " 'watermelon' 'muskmelon' 'apple' 'orange' 'papaya' 'coconut' 'cotton'\n",
      " 'jute' 'coffee']\n"
     ]
    }
   ],
   "source": [
    "# Get unique values in the 'label' column\n",
    "unique_labels = newdf[\"label\"].unique()\n",
    "label_count = newdf[\"label\"].nunique()\n",
    "\n",
    "print(f\"Number of unique crops: {label_count}\")\n",
    "print(\"List of unique crops:\")\n",
    "print(unique_labels)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting seaborn\n",
      "  Downloading seaborn-0.13.2-py3-none-any.whl.metadata (5.4 kB)\n",
      "Requirement already satisfied: numpy!=1.24.0,>=1.20 in c:\\users\\b_nitish_durga\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.10_qbz5n2kfra8p0\\localcache\\local-packages\\python310\\site-packages (from seaborn) (2.0.2)\n",
      "Requirement already satisfied: pandas>=1.2 in c:\\users\\b_nitish_durga\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.10_qbz5n2kfra8p0\\localcache\\local-packages\\python310\\site-packages (from seaborn) (2.2.3)\n",
      "Requirement already satisfied: matplotlib!=3.6.1,>=3.4 in c:\\users\\b_nitish_durga\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.10_qbz5n2kfra8p0\\localcache\\local-packages\\python310\\site-packages (from seaborn) (3.10.0)\n",
      "Requirement already satisfied: contourpy>=1.0.1 in c:\\users\\b_nitish_durga\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.10_qbz5n2kfra8p0\\localcache\\local-packages\\python310\\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (1.3.1)\n",
      "Requirement already satisfied: cycler>=0.10 in c:\\users\\b_nitish_durga\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.10_qbz5n2kfra8p0\\localcache\\local-packages\\python310\\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (0.12.1)\n",
      "Requirement already satisfied: fonttools>=4.22.0 in c:\\users\\b_nitish_durga\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.10_qbz5n2kfra8p0\\localcache\\local-packages\\python310\\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (4.55.8)\n",
      "Requirement already satisfied: kiwisolver>=1.3.1 in c:\\users\\b_nitish_durga\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.10_qbz5n2kfra8p0\\localcache\\local-packages\\python310\\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (1.4.8)\n",
      "Requirement already satisfied: packaging>=20.0 in c:\\users\\b_nitish_durga\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.10_qbz5n2kfra8p0\\localcache\\local-packages\\python310\\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (24.2)\n",
      "Requirement already satisfied: pillow>=8 in c:\\users\\b_nitish_durga\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.10_qbz5n2kfra8p0\\localcache\\local-packages\\python310\\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (11.1.0)\n",
      "Requirement already satisfied: pyparsing>=2.3.1 in c:\\users\\b_nitish_durga\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.10_qbz5n2kfra8p0\\localcache\\local-packages\\python310\\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (3.2.1)\n",
      "Requirement already satisfied: python-dateutil>=2.7 in c:\\users\\b_nitish_durga\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.10_qbz5n2kfra8p0\\localcache\\local-packages\\python310\\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (2.9.0.post0)\n",
      "Requirement already satisfied: pytz>=2020.1 in c:\\users\\b_nitish_durga\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.10_qbz5n2kfra8p0\\localcache\\local-packages\\python310\\site-packages (from pandas>=1.2->seaborn) (2024.2)\n",
      "Requirement already satisfied: tzdata>=2022.7 in c:\\users\\b_nitish_durga\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.10_qbz5n2kfra8p0\\localcache\\local-packages\\python310\\site-packages (from pandas>=1.2->seaborn) (2025.1)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\b_nitish_durga\\appdata\\local\\packages\\pythonsoftwarefoundation.python.3.10_qbz5n2kfra8p0\\localcache\\local-packages\\python310\\site-packages (from python-dateutil>=2.7->matplotlib!=3.6.1,>=3.4->seaborn) (1.17.0)\n",
      "Downloading seaborn-0.13.2-py3-none-any.whl (294 kB)\n",
      "Installing collected packages: seaborn\n",
      "Successfully installed seaborn-0.13.2\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "[notice] A new release of pip is available: 25.0 -> 25.0.1\n",
      "[notice] To update, run: C:\\Users\\b_nitish_durga\\AppData\\Local\\Microsoft\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\python.exe -m pip install --upgrade pip\n"
     ]
    }
   ],
   "source": [
    "# !pip install seaborn\n",
    "from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABE0AAAPmCAYAAAAR42GCAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAyMlJREFUeJzs3QmYnePd+PHfZI9MEhKxZqERVQRJNUqFNkLtrZ2G4FWUvq1GLLE0QhbRCKWonQghaKiXohWvpkhpiaSJJrEEodaIkMkymcz8r+fxT95oT1vjofPMcz6fXnPNOWfOnPnOYyk/932firq6uroAAAAA4BOafPIuAAAAAAlDEwAAAIASDE0AAAAASjA0AQAAACjB0AQAAACgBEMTAAAAgBIMTQAAAABKMDQBAAAAKMHQBAAAAKAEQxMAaEReeOGFOOGEE+Koo46Kgw46KC6//PKoq6ur9+vceuutsddee8VvfvObT/09U6ZMiYkTJ0YWX/7yl2Po0KGfeGzEiBHRr1+/f/l9yc9dsWLFPzw+aNCgqK6uztQEAPDPVNR9ln/SAgD+4z788MMYMGBA/OIXv4hNNtkkVq5cGaecckp84xvfiCOOOKJerzVw4MA455xz0iHGf9IOO+wQHTt2jPvuuy+aNWuW/g7f+9734t13341HH330n35fMlR58MEHo2XLlv/RXgCgvFlpAgCNxOTJk9OhQzIwSTRt2jQuuuiidMVJYvTo0XHIIYekH+PGjUsfGzJkSLqy47jjjov99tsvZs2ala7aeP7559Ohyfz58+PQQw9d/TOS26+//no888wz6e1koJF87+LFi2PSpElx8cUXp8+78cYb05972GGHxZgxY9LHkmHOmWeeGd///vdj7733jj/84Q//8Dskg5I+ffrEE088kd5//PHHY6eddlr99aeffjod6CQraQ488MCYN29e3HXXXelQJVlV8tRTT6W/X9J17733psOU5cuXx49//OO44447YunSpXHAAQekvycAQFaGJgDQSLzzzjvRpUuXTzzWpk2baNGiRfzv//5vOuy48847Y8KECXH//ffHnDlz0udstNFGccMNN6SDiGRgkgw6vvKVr6QDl4qKipI/65FHHkm37yTbeJJVLMkql1WS101WfSRDiuTj1VdfTX9+Imm5/vrr04HMzTffXPK1991339XbgpLOZJiz5vaj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Ig/yeu1W0ZeNvmz0Fbcvz20JfdnoK3ZfHnnL4fqz0qQRenTyI1G9vDrGT5gYpwwaHGPHjI480ZeNvmz01d+3v9wxBm6/UTRv+n//J9pl7VbxjU3Xjjz932oer92a9GWjLxt9xe3Lc1tCXzb6it1HMRRqpcnbb78dgwYNiqZNm0abNm3ia1/7Wjz66KOxcuXKuOKKK2L06NGxYMGCWLhwYZx99tmx0UYbxZlnnplOJd9///04/fTTY+edd4677747/airq4uTTz45dt111xg8eHD6+sk086KLLoouXbo02O857dlnYqed+6a3t9l2u5g1a2bkib5s9GWjr/7eXVwdv3xyfvxXn43T+21aNI0Dtl4v7nzurThq+40iL/J47dakLxt92egrbl+e2xL6stFX7D6KoVBDk5tuuimOO+642G233dKhSOJLX/pSDB8+PF577bX08b322iuefPLJuO++++IHP/hBvPPOO3H//ffHokWL4kc/+lFsueWW6cDktttuixUrVsT3vve96N27d7z88ssxfvz49PNHH33UoL9nVdXiaNu2cvX9pk2aRk1NTTRrlo8/nPqy0ZeNvvp79o2PouNazdPbycqSo7ffKO6c/lasWFkXeZLHa7cmfdnoy0Zfcfvy3JbQl42+YvdRDIX6sykZaBx77LHp7Z49e8aSJUuia9eu6f327dvHlClTVq88SVaXrHpey5YtY7311kuf//rrr6cfxxxzTPr1pUuXpsOTZMCSrDZJ9oCdeuqpDfhbRrRpUxlVVVWr79fW1ebqbwz6stGXjb5suq3TOtarbBEDen+8XWfDdi3j0G03SIcoDS3v105fNvqy0Vfcvjy3JfRlo6/YfXnkSJMyP9MkGZDMmjUrvb3qc5MmH/+K99xzT/r1MWPGRJ8+fdKtN4kXXnghHaK8++670apVq9h4441js802i1tuuSVuvvnm2GeffdKhybx58+Kaa66JI488MsaNG9eAv2VEr1694/EpU9LbM6Y/Fz16bB55oi8bfdnoy+aVhUtj2G9fSg+Eve6Pr8ebHy7PxcCkMVw7fdnoy0Zfcfvy3JbQl42+YvdRDIUawx1//PHpuSTJUCM5eyQZfiQDkcTXv/71dKVIstpkww03TLfjJJLlW8n3ffjhhzFkyJDo2LFj7LnnnnHEEUfEsmXL4oADDkhXobzyyitx8MEHp4OVM844o0F/z379d4+pU5+IgQMOT4c/F4wYFXmiLxt92egrrrxfO33Z6MtGX3H78tyW0JeNvmL3UQwVdauWXBRAsvVm0003TT+SM0122WWXdADyzyTbcJLzTpIVJP8py2r+Yz8KKCM/vufj1XV5dfkBWzV0AgDAp9KqUEsLPukbY/4QjckTp3980G9DKtSfDuuvv36cdtpp0bx589hggw2iX79+DZ0EAAAANFKFGppstdVW8atf/epTP79z587/0VUmAAAAQONRqINgAQAAAD4vhVppAgAAAJTmLYfrz0oTAAAAgBIMTQAAAABKsD0HAAAAykCF/Tn1ZqUJAAAAQAmGJgAAAAAlGJoAAAAAlOBMEwAAACgDzjSpPytNAAAAAEowNAEAAAAowfYcAAAAKAN259SflSYAAAAAJRiaAAAAAJRgaAIAAABQgjNNAArg8gO2ijzrNGBc5Nm7tx3d0AkAAF84bzlcf1aaAAAAAJRgaAIAAABQgu05AAAAUAbszqk/K00AAAAASjA0AQAAACjB9hwAAAAoA949p/6sNAEAAAAowdAEAAAAoARDEwAAAIASnGkCAAAAZcCRJvVnpQkAAABACYYmAAAAACXYngMAAABloIn9OfVmpQkAAABACYYmAAAAACWU/facKVOmxOLFi2Pvvff+h6/dddddccghh0Te1NbWxsjhw2LunDnRokWLOO/8EdG1W7fIC33Z6MtGX7H6mjWtiKt+8I3o1qkyWjRvGmMmzYiX3vowfnHCjlFRUREvvflh/PCaJ2NlbV00tLxdu7+nLxt92egrZltCXzb6it1HMZT9SpNddtml5MAkMW7cuMijRyc/EtXLq2P8hIlxyqDBMXbM6MgTfdnoy0ZfsfoO79s93l+8PL497KE4cNTv4uL/6hPDjugd598xLXYf+mD6nL2/2iXyIG/X7u/py0ZfNvqK2ZbQl42+YvflUXKkSWP6yIOyX2kyadKkWLhwYbzxxhsxdOjQeOqpp+Lhhx+OLl26xOuvvx7XXnttHHzwwXHWWWfFkiVLYt11142LLroonWQ2lGnPPhM77dw3vb3NttvFrFkzI0/0ZaMvG33F6rtn6itx7x9fSW8nK0tqVtbFgLGPRW1dXTRv2iTWW7t1LFpSHXmQt2v39/Rloy8bfcVsS+jLRl+x+yiGsl9p8s8ce+yx0blz5zjhhBPimmuuSbfpjB8/Pnr16hV33313g7ZVVS2Otm0rV99v2qRp1NTURF7oy0ZfNvqK1Ve1vCYWL6uJylbNYvypu8bwidPSgUmXddvE02O/Ex3btoyZry6MPMjbtft7+rLRl42+YrYl9GWjr9h9FEPZrzT5e3V1/7gv/uWXX47p06en23Wqq6vj61//ejSkNm0qo6qqavX92rraaNYsP38o9WWjLxt9xevbuONaMWHwt+L6386Ju56Ylz42/72q6PWTe+Lofj3iwoHbx4lXPRENLY/Xbk36stGXjb5itiX0ZaOv2H15lKzcpX6sNImI5cuXx3vvvZfefuGFF/7h6926dYtTTjklXWkyaNCg6NOnTzSkXr16x+NTpqS3Z0x/Lnr02DzyRF82+rLRV6y+Tu1bxa/P2T2GTngmxj/2YvrYxNP7RfcN2qa3P1q6InJwBmwur93f05eNvmz0FbMtoS8bfcXuoxgq6kotrSjDM02efPLJWLZsWXTv3j2dTibnmxx55JGx/fbbx4ABA+Kcc85J32WnadOmcfHFF8f666//mX7esprP75ToF+bOTVfGXDBiVGz6pe6RF/qy0ZeNvnz2dRrw2Q7Wvujor8VBO20ac99YtPqxCyY+G8MHbB/VNStj6fKV6bvnvP3B0kx97952dGRVrn9sPy/6stFX3L48tyX0ZaMvn32tCrxY5dtXPRWNycMn79DQCYYmd955ZzosGThw4H/k530eQxOAxuazDk3+Uz6PoQkAUAyGJvnxcA6GJmW9PWfatGlx6623Nvh2GwAAAPiiNaloXB95UOAZ2r+XvBPOfffd19AZAAAAQA6V9UoTAAAAgH+mrFeaAAAAQLnwlsP1Z6UJAAAAQAmGJgAAAAAlGJoAAAAAlOBMEwAAACgDjjSpPytNAAAAAEowNAEAAAAowfYcAAAAKAMVYX9OfVlpAgAAAFCCoQkAAABACYYmAAAAACU40wQAAADKQBNHmtSblSYAAAAAJVhpAsAX7t3bjo4823rIg5FnM0fv1dAJAABlydAEAAAAykBFhf059WV7DgAAAEAJhiYAAAAAJRiaAAAAAJTgTBMAAAAoA440qT8rTQAAAABKMDQBAAAAKMH2HAAAACgDTezPqTcrTQAAAABKMDQBAAAAKMHQBAAAAKAEZ5oAAABAGXCkSf1ZaQIAAABQgqEJAAAAQAm25wAAAEAZqLA/J/9Dk0mTJsXChQvjuOOOS++PHDkyfvzjH0fbtm1XP+fEE0+Mn/70p9G5c+fP/HOOOuqouOyyy6JDhw5RNLW1tTFy+LCYO2dOtGjRIs47f0R07dYt8kJfNvqy0Vfcvjy2NWtSEaMP6xkbr9M6WjRrElc98lK8+PbiuOjwnlFXFzH3rcUx7J5Z6e2GlsfrtyZ92egrbl+e2xL6stFX7D6KocG355xzzjmfGJjw7z06+ZGoXl4d4ydMjFMGDY6xY0ZHnujLRl82+orbl8e273x1o1hYtSKOuOqp+K/r/hznHbBlnL3/FnHpQy+kjyX/Maf/VutHHuTx+q1JXzb6ituX57aEvmz0FbuPYmiw7TmzZ8+O4cOHx6JFi+KWW26JWbNmxSWXXBLrrrtuvPXWW+lzhgwZkk4M582bl36+5ppr4sMPP4yzzjorlixZkj73oosuilNPPTX++7//O7bYYou48sor08+rVrH87W9/i2233TZ9rVdffTXOO++8qKmpic022yyGDRsW8+fPj/PPPz9WrFgRy5cvjyuuuCKmTJkSv//972Px4sXx/vvvpytWkq8nA55kOVOPHj3iggsuaKhLF9OefSZ22rlvenubbbeLWbNmRp7oy0ZfNvqK25fHtgenvxUPzfj4/7OSAUlNbV1s1bl9PPXS++ljU2a/Gztvvm78bubbDVyaz+u3Jn3Z6CtuX57bEvqy0VfsPoqhQVaaJMOLZOhw+eWXxzrrrJM+lgw7brjhhrjqqqvSAcUq2223XYwfPz7WWmutmDlzZjo4OeSQQ9LHevXqFXfffXfsv//+8Zvf/CZ9/hNPPBG77LJLevvggw+O22+/Pf15yfeOGTMmzjzzzLj11lujZcuW6WAkGcgMHjw4xo0bFzvssEM8+eST6fe2bt067TnwwAPjoYceSh/fddddY8KECdG7d++orq6OhlJVtTjatq1cfb9pk6bpICgv9GWjLxt9xe3LY9uS6pVRtXxltGnZNK4Y2CsufWhurLlTePHymmjbKh/Hh+Xx+q1JXzb6ituX57aEvmz0Fbsvj5L/yNOYPsp2aPLUU0/F0qVLo1mz//sHyaqqqvT8kebNm8eWW265+vFkRUiiU6dO6UqQl19+Oa6//vr0zJIHHngg3n777fjmN78Zjz/+ePz1r39Nn5+8xqqBS6Jnz57x2muvpQOSUaNGpd/75z//OV2FkrxuMohJhinPPvvs6r/I/v7nJgOYpHngwIHpqpiG1KZNZXq9Vqmtq/3EtWxo+rLRl42+4vbltW3D9q3i1h/sEPc+87f4n2lvfuL8ksqWzeLDZfn4h7e8Xr9V9GWjr7h9eW5L6MtGX7H7KIYGGZoceuihcfzxx6dba1ZJBh3vvvtuOrSYO3fuPz3dt1u3bnHKKaekK00GDRoUffr0SbfubLXVVulqlWTVyZpbgBIzZsyI7t27R9euXdMtO8n3Jj8/Gab84he/SIcoSUsyIKn7//+0+/c/93//93/TFSzJ9yZbdpLXbCi9evWOx6dMSW/PmP5c9OixeeSJvmz0ZaOvuH15bOtY2SJuOuFr8bMH5sTdf3o9fez5v30YO3T/+BDyXbboFH96+eOtOg0tj9dvTfqy0Vfcvjy3JfRlo6/YfRRDg43h9t577/jVr34VTz/9dHo/WemRvGtOsl0n2YrzzyTPSc4WSYYdTZs2jYsvvjh9PBmWnHHGGfHVr3519XPvuuuudBjyjW98I7785S/Haaedlr4rT7JyZO21106/d4899oizzz47XeXSrl27eO+999Lhyd9Lzkk5/fTT07aOHTumA5eG0q//7jF16hMxcMDh6ZDnghGjIk/0ZaMvG33F7ctj20m7dY/2rZvHf+/ePf1IDL/3rzH0u1tG86YV8eI7VavPPGloebx+a9KXjb7i9uW5LaEvG33F7sujJnnZ89KIVNStWlrRyCXDl+Q8k2T1SZ7lZJU2AGvYesiDkWczR+/V0AkAUDZychzZF+KwcdOiMZl4dK/yXWnyebr33nvTbTNXX311Q6cAAAAABVGIocl3v/vd9AMAAADg81KIoQkAAADwrznRpJG8ew4AAABA3hmaAAAAAJRgew4AAACUgYoye8vhW265JVasWBHHHXdcHH744dG8efP08X333TcOO+ywT/UahiYAAABAoQwfPjymTJmSDktWrlwZzZo1S991t74MTQAAAIDc2W233f7l1ydPnvxPv7bjjjvGVlttFQsXLox58+bFggULYuDAgdG+ffsYNmxYdOzY8VM1ONMEAAAAKJT+/fuvvp2sMvn+97+fbtdJtuaMHTv2U7+OlSYAAABQBpo0siNNJv+LlST1sdFGG8WGG26Y3t51113juuuu+9Tfa6UJAAAAUFi//e1vY8yYMentP/3pT7HFFlt86u+10gQAAAAorD333DP+93//NwYMGBBt2rSJUaNGfervNTQBAACAMlBubzl84IEHrr5dn3NM1mR7DgAAAEAJhiYAAAAAJRiaAAAAAJTgTBMAAAAoA2V2pMnnwtAEgLI3c/RekWfX/nFe5NUJX9+0oRMAAL4wtucAAAAAlGClCQAAAJSBcnvL4c+DlSYAAAAAJRiaAAAAAJRgew4AAACUgSZ259SblSYAAAAAJRiaAAAAAJRgaAIAAABQgjNNAAAAoAx4y+H6s9IEAAAAoARDEwAAAIASbM8BAACAMmBzTv1ZaQIAAABQgqEJAAAAQAmGJgAAAAAllN2ZJpMmTYqFCxfGcccd96mef9ddd8UhhxwSU6ZMicWLF0fHjh3j4YcfjqFDh0ZDqa2tjZHDh8XcOXOiRYsWcd75I6Jrt26RF/qy0ZeNvuL25bkt731vvTw7pt59Qxxwxpj0/svPPhEv/vkPsccJQyIv8nz9Evqy0VfMtoS+bPQVuy+PmnjL4Xqz0uTfGDduXPp5l112ib333jvy4NHJj0T18uoYP2FinDJocIwdMzryRF82+rLRV9y+PLflue/ZB++K/73557FyxYr0/h8m/DKm/uqmqKutizzJ6/VbRV82+orZltCXjb5i91EMZbfSJFFXVxfDhg2LF198MZo2bRojRoyIioqKGDJkSLRr1y5effXVGDRoUCxdujRef/31GDlyZHzlK19JV6hsvfXWDZ0f0559JnbauW96e5ttt4tZs2ZGnujLRl82+orbl+e2PPe177Rh7PXDn8Yj13+8ymSDzbaMTXvvFLMe+03kSV6v3yr6stFXzLaEvmz0FbuPYijLlSbLli2L5s2bx6233hpnnXVWjB07Nn387bffjssvvzwuueSSuP3222O//faLzp07xznnnBN5UlW1ONq2rVx9v2mTplFTUxN5oS8bfdnoK25fntvy3Nd9+52jSdOmq+/36LNrLt9uMK/XbxV92egrZltCXzb6it2XR8nunMb0kQdludKkZcuW8cQTT8RRRx2V3k9WmyQ23XTTaNasWXTq1Cmqq6sjr9q0qYyqqqrV92vratPuvNCXjb5s9BW3L89tjaEv7/J+/fRlo6+YbQl92egrdh/FUJYrTZKtOHvssUeMHz8+Lr744th9991XP94Y9OrVOx6fMiW9PWP6c9Gjx+aRJ/qy0ZeNvuL25bmtMfTlXd6vn75s9BWzLaEvG33F7qMYyvZMkwULFsSRRx4ZS5YsiTPPPPOfPvfLX/5yuoXna1/7WuRFv/67x9SpT8TAAYenv8sFI0ZFnujLRl82+orbl+e2xtCXd3m/fvqy0VfMtoS+bPQVu49iqKhL/uziP2aZLXYA1NO1f5wXeXXC1zdt6AQA+Fy1KvDSghPumhWNybWHbNXQCeW5PQcAAADg3zE0AQAAACihwAuPAAAAgFUayXuf5IqVJgAAAACfdaXJ448//k+/tvPOO3+alwAAAAAo3tDkgQce+KdfMzQBAAAAynZocuGFF5Z8/J133vm8ewAAAIAvQBOHmnyxB8Fedtllcfvtt8eKFSti2bJlsckmm/zLVSgAAAAAZXEQ7KOPPhpTpkyJ/fbbL37zm9/E+uuv/8WVAQAAADSWlSadOnWKFi1aRFVVVXTr1i1dcQIAAADkn905X/BKkw022CDuvvvuaN26dYwdOzY+/PDDz/AjAQAAAAq20uSCCy6IN998M/bcc8+455570sEJAAAAQJT70OS+++5bfbtt27Yxc+bM2Gyzzb6ILgAAAIDGMzR56aWX0s91dXXx17/+NdZee+347ne/+0W1AQAAAJ+TCoeafLFDk8GDB6++nQxOTjzxxPr/RAAAAICiDU2qq6tX33733Xfj9ddf/yKaAAAAABrX0CQ5ADZZzpOsMmnVqlV8//vf/+LKAIDUCV/fNPJqsx/fG3n24uW2EQPAZ3r7XOo/NPn5z38e22yzzer7Tz/9dH2+HQAAAKBYQ5M///nP8eKLL8bNN98cxx57bPpYbW1t3HbbbXH//fd/0Y0AAAAA+RyatGvXLt577730TJPkLJNEsk3n9NNP/6L7AAAAAPI7NNl8883Tj0MOOSTef//9+MpXvhKPPPJI7LTTTl98IQAAAJCZtxz+gs+BGTlyZDz//PPp7Xnz5sWQIUM+w48EAAAAKNjQ5O23346DDjoovX388cfHO++880V1AQAAADSed89JlvIkK0w23XTTePXVV9PDYAEAAID8a2J3zhc7NDnrrLNi0KBB6aGwrVq1igMOOKD+PxEAAACgaNtztt1227jgggvSA2CXLl0aCxYs+OLKAAAAAPK+0iR5q+EHHnggbrvttmjRokUsXrw4Jk+enK42AQAAACjblSb9+vWLOXPmxMUXXxwTJkyI9dZbz8AEAAAAGtmZJo3po9GsNDn66KPjf/7nf+KNN96Igw8+OOrq6r74MgAAAIC8rzRJ3l74vvvui6OOOiruv//+mDlzZowZMybmzp37xRcCAAAA5P3dc/r06ZN+fPjhh/HrX/86zjjjjLj33nu/uDoAAADgc1FRkZM9L0V995xV2rVrl646MTABAAAAiqpeK02K7tprr43+/fvHl770pciz2traGDl8WMydMyd9N6Pzzh8RXbt1i7zQl42+bPQVty/PbQl99desSUWMPap3dO7YOlo2axqXPTgnfveXt9KvnXfQ1vHSO4vj1j+8EnmQx+u3Jn3F7ctzW0JfNvqK3UcZrzQpqhNOOCH3A5PEo5Mfierl1TF+wsQ4ZdDgGDtmdOSJvmz0ZaOvuH15bkvoq78D+3SJhVXVcdAlj8eRVzwZIw7bJjpUtojxP9wxdt9mw8iTPF6/Nekrbl+e2xL6stFX7D6KodArTSZNmhSPPfZYVFVVpXu3kvNYkvudO3eOfffdN66//vpYsWJFbLDBBnHppZfGkCFDYsCAAXHHHXfEa6+9FjU1NfH888/HH//4x3jggQfi7rvvTt856OSTT45dd921wX6vac8+Ezvt3De9vc2228WsWTMjT/Rloy8bfcXty3NbQl/93T/tjXhg2t8+vlMRUVNbF21aNotLHpgd39pq/ciTPF6/Nekrbl+e2xL6stFX7L48ysvb+DYmhV9p0rp167jhhhuiQ4cO0b59+5gwYULMnj075s2bF1dffXXcfvvt8fbbb6cfq4wcOTLGjx8f3bt3jwsvvDCWLl2aDkxuu+22GDduXFx22WUN+rbLVVWLo23bytX3mzZpmg548kJfNvqy0Vfcvjy3JfTV35LlK6NqeU06KLn2+D4x5r6/xvwFS2LaKwsjb/J4/dakr7h9eW5L6MtGX7H7KIZCrzRJ9OjRI/1cWVkZm2yySXq7TZs26WG2ycqS5PaCBQvSFSd/f77JeuutF3vvvXfMmDEjXn/99TjmmGPSryVDlIULF6aDmIbQpk1lunpmldq62mjWLD9/KPVloy8bfcXty3NbQt9ns+E6reP6E/rELVPmxb1/fj3yKq/XbxV9xe3Lc1tCXzb6it1HMTQp17dUGj16dFx88cUxdOjQWLly5SdWjjz00EMxa9as+NGPfpTe33jjjWOzzTaLW265JW6++ebYZ5990lUrDaVXr97x+JQp6e0Z05+LHj02jzzRl42+bPQVty/PbQl99bdu25Yx4Uc7xah7Z8XEqa9FnuXx+q1JX3H78tyW0JeNvmL35VHyr8eN6SMPynYMt9tuu8XBBx+crkBZd91147333lv9tTPPPDO22mqrGDhwYHr//PPPjz333DOOOOKIWLZsWRxwwAHRtGnTBmvv13/3mDr1iRg44PB02HPBiFGRJ/qy0ZeNvuL25bktoa/+frTn5tG+dfP4yV5bxE/2+vixo658MpatqI28yeP1W5O+4vbluS2hLxt9xe6jGCrqGvJwjjK0zBY7AApksx/fG3n24uXfbegEABqZVgVeWnDGA3OiMfnZPl9u6ITib88BAAAA+CwKPEMDAAAAVmmSl4NCGhErTQAAAABKMDQBAAAAKMH2HAAAACgDVk3Un2sGAAAAUIKhCQAAAEAJhiYAAAAAJTjTBAAAAMqAdxyuPytNAAAAAEowNAEAAAAowfYcAAAAKANN7M+pNytNAAAAAEowNAEAAAAowdAEAAAAoARnmgAAAEAZcKRJ/VlpAgAAAFCClSYAwGf24uXfjTzrc8EjkWdPD+3f0AkAwL9gaAIAAABloIntOfVmew4AAABACYYmAAAAACUYmgAAAACU4EwTAAAAKANNvOdwvVlpAgAAAFCCoQkAAABACbbnAAAAQBmwO6f+rDQBAAAAKMHQBAAAAKAE23MAAACgDDSxPaferDQBAAAAKMHQBAAAAKAEQxMAAACAEpxpAgAAAGWgIhxqUl+GJo1QbW1tjBw+LObOmRMtWrSI884fEV27dYu80JeNvmz0Fbcvz20JfcXt69m5Xfxk9x5x3E3PxFc2bBvn7rdFrFhZG7PfXBwXPTgn6uoaujDf1y+hr5htCX3Z6Ct2H8Vge04j9OjkR6J6eXWMnzAxThk0OMaOGR15oi8bfdnoK25fntsS+orZd+zO3WLYd7aMls0+/kemoft/JX724Nw45oZnYvHymti75waRB3m9fqvoK2ZbQl82+ordRzEUaqXJpEmT4rHHHouqqqqoqKiIPn36pPc7d+4c++67b1x//fWxYsWK2GCDDeLSSy+NIUOGpBPJefPmpZ+vueaaeOmll+Kcc86JtdZaK5o1axaHHnpobL755vHTn/40/RnJ91544YXp8xvKtGefiZ127pve3mbb7WLWrJmRJ/qy0ZeNvuL25bktoa+YffPfXxqDbp8eow7aOr2/fruWMX3+ovT2c699EN/colM8MOOtBq7M7/VbRV8x2xL6stFX7L488pbD9Ve4lSatW7eOG264ITp06BDt27ePCRMmxOzZs9PByNVXXx233357vP322+lHYrvttovx48enQ5KZM2fGFVdcESNGjIhx48aly70SF198cTpgue2226Jr165x7733NujvWFW1ONq2rVx9v2mTplFTUxN5oS8bfdnoK25fntsS+orZ98jz70RN7f/tv3l94dL46iZrp7d3/fK60bp508iDvF6/VfQVsy2hLxt9xe6jGAq10iTRo0eP9HNlZWVssskm6e02bdpEu3bt0sFHcnvBggXpipPEZpttln7u1KlTLF++PF577bXYYost0se23vrj/6o0f/786NmzZ3q7V69eMXXq1GhIbdpUpqtpVqmtq01XxeSFvmz0ZaOvuH15bkvoK3bfKkPveT7O3Hvz+ME3m8Szr34Q1TU5ONCkEVw/fcVsS+jLRl+x+yiGwq00SbbllDJ69Oh0xcjQoUNj5cqVUff/T237++dvtNFGMWfOnPT2888/n35OtvfMmjUrvf3ss8+m9xtSr1694/EpU9LbM6Y/Fz16bB55oi8bfdnoK25fntsS+ordt0rfL68bQ+6eFcff/Gy0b908pr60IPIg79dPXzHbEvqy0VfsPoqhbMZwu+22Wxx88MHpCpR111033nvvvZLPGzx4cJx77rnRsmXLWLJkSTqpPO2002LYsGHp6pT11lsvTjrppGhI/frvHlOnPhEDBxyeDn8uGDEq8kRfNvqy0Vfcvjy3JfQVu2+V1xYsieuO6R3LVqyMP81bGI+/kI+hSd6vn75itiX0ZaOv2H155EyT+quoW7XkglRyXknfvn2jY8eOcfTRR6cDk1Vbcz4Py2yxA4D/mD4XPBJ59vTQ/g2dAMDfaVXgpQU/+9+XojE541vdGzqhfFaafFrJAbLf//7303fH2WqrrT7XgQkAAADQeBia/J1ddtkl/QAAAIByOAOUMjoIFgAAAODzYGgCAAAAUIKhCQAAAEAJzjQBAACAMuAth+vPShMAAACAEgxNAAAAAEqwPQcAAADKgHccrj8rTQAAAABKMDQBAAAAKMHQBAAAAKAEZ5oAAABAGWjiUJN6s9IEAAAAoARDEwAAAIASbM8BAACA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xU022SSOO+64uOSSS2LhhRd+3z4kCDAc9eEID9Unb731Vvr+csstl3qZ8HOPOOKIuOaaa5K4gu0l2WzwkLjzzt/HsC/ukgSe4074ZwVOXdC+1tC+1tC+9rWvzraB9rWG9rWG9rWvfXW2DbRv1jnk8ytHv97zxOHbfTp9wXGj74uzvrpBTJk6Ld56Z1q6PacO1HH8OpN90h5065i5rOIjagRLg1X6mcxJrr766nTUB0Fkzz33TMIKAkidedsjdiIiIiIinZqPfbGet2xmXrxwz9ImdGp6tfEJn4mvvBOdif4LzdN1Kk0+CuhZsu+++6Y7uVdcccXaCyYiIiIiIiIipajJiZdORSWVJvIvrDQREREREencWGnS3rRzpcnTnazSZMkaVJpU1ghWRERERERERKQzoWgiIiIiIiIiItKENi48EhEREREREZFMXa7x7UxYaSIiIiIiIiIi0gRFExERERERERGRJng8R0RERERERKRL4PmcWcVKExERERERERGRJiiaiIiIiIiIiIg0QdFERERERERERKQJ9jQRERERERER6QJ45fCsY6WJiIiIiIiIiEgTFE1ERERERERERJrg8RwRERERERGRLoCnc2YdK01ERERERERERJqgaCIiIiIiIiIi0oRuHR0dHc3+QD4a3p5a2gIRkep54613o84sMO9cpU0QERGZY3zmjDuizlz/tfWizvRq4yYWz742JToTS/Sbu7QJ9jQRERERERER6Qp45fCs4/EcEREREREREZEmKJqIiIiIiIiIiDTB4zkiIiIiIiIiXYBuXjo8y1hpIiIiIiIiIiLSBEUTEREREREREZEmKJqIiIiIiIiIiDTBniYiIiIiIiIiXQFbmswyVpqIiIiIiIiIiDRB0UREREREREREpAkezxERERERERHpAng6Z9ax0kREREREREREpAmKJiIiIiIiIiIiTVA0ERERERERERFpgj1NRERERERERLoA3WxqMssomvx/Hnnkkbjnnntizz33jLozffr0OPH4Y2PCY4/F3HPPHcd874ToP2BA1AXtaw3taw3ta1/7pk59N77/vaPi+eeejXenTIlh+3wpNth406gLdR470L7W0L7W0L72tA20r33tW2HRPrH/BgPi4CsejqOGDoqFes+Vvr/YAvPE+OcmxfE3TChtYq3HT9oHj+f8f1ZYYYVOIZjArbfcHFPemRKjLhodBx78rRh5yslRJ7SvNbSvNbSvfe27ccy10bdfvzjj3AtixOk/iVOHnxh1os5jB9rXGtrXGtrXnraB9rWnfbussUQcMniZmLvHP8NFBJIknlz7aEx6Z1qcMfavUQfqOn7SXnT5SpMrr7wyrrjiipg2bVosv/zyceyxx8bw4cPjD3/4Q/rzk08+ORZccMH49re/HW+++WYsssgi8YMf/CApmaW4/757Y70NNkyfV/n0qvHwww9FndC+1tC+1tC+9rVv08Fbxqabb5E+d3R0RI+e9drC6jx2oH2toX2toX3taRtoX3va9+zrb8fR1z0WR24xcIbv771O/7jqwefilTffjTpQ1/GrM928dHiWsdIkIpZeeuk4+OCDo3v37jFu3Lh46qmn4rLLLosTTzwxHn744fjJT34SO+64Y4waNSpWW221uPzyy4vaO3nypJh//j7v/b5H9x4xderUqAva1xra1xra1772zTfffDFf797x5uTJcdThB8d+Xzkg6kSdxw60rzW0rzW0rz1tA+1rT/vG/vmVmDqtY4bv9Zt3rlh9yb5xw/i/R12o6/hJe1GvNF0h+vfv/97niRMnxkorrZQ+Dxo0KH396le/igcffDB+/vOfx5QpU2KdddYpaG1E7959YvLkye/9fnrH9OhZo4yr9rWG9rWG9rW3fS88/1x859AD4ws77BJDhm5d2pxONXba1xra1xra1562gfa1t32NbDxw4bj5sRdj+oxaSlE60/hJ58VKEwah+7+G4ZOf/GRqCgv8esopp8SAAQPiwAMPTJUmVKSstdZaBa2NWG211eP2sWPT53EPPhADBw6KOqF9raF9raF97WvfKy+/FN/6+v7x5QO+GVtvu13UjTqPHWhfa2hfa2hfe9oG2tfe9jVClck9T74WdaIzjV9t6NbJvmqAMtxMUGWCSLLrrrsmMeWEE06IPn36xHe+8504/fTTo0ePHjFixIiiNm42eEjceefvY9gXd0nn+o874aSoE9rXGtrXGtrXvvaNOv+c+Mc/3oifn3tW+oIRPzwr5unVK+pAnccOtK81tK81tK89bQPta2/7Gum/4Lyp10md6EzjJ52Xbh28XVIZb3vETkS6IG+8VY+Gce/HAvP+8xpFERGRduAzZ9wRdeb6r60XdaZXG5cWvDipcwWkH+tT/mF4PEdEREREREREpAnlZRsRERERERER+cipSZuQToWVJiIiIiIiIiIiTVA0ERERERERERFpgsdzRERERERERLoA3TyfM8tYaSIiIiIiIiIi0gRFExERERERERGRJiiaiIiIiIiIiIg0wZ4mIiIiIiIiIl2Abl46PMtYaSIiIiIiIiIi0gRFExERERERERGRJng8R0RERERERKQL4JXDs46VJiIiIiIiIiIiTVA0ERERERERERFpgqKJiIiIiIiIiEgTFE1ERERERERERJrQraOjo6PZH8hHw9tTS1sgIiIiIiJSjrWOuznqzLjjBke78uqb06IzseB8PUqbYKWJiIiIiIiIiEgzvHJYREREREREpAvglcOzjpUmIiIiIiIiIiJNUDQREREREREREWmCoomIiIiIiIiISBPsaSIiIiIiIiLSBegWNjWZVaw0ERERERERERFpgqKJiIiIiIiIiEgTPJ4jIiIiIiIi0gXwyuFZx0oTEREREREREZEmKJqIiIiIiIiIiDRB0UREREREREREpAn2NBERERERERHpAtjSZNax0kREREREREREpAmKJiIiIiIiIiIinfl4zqOPPhrvvvturLzyyh/Jv7/NNtvEtddeG52B6dOnx4nHHxsTHnss5p577jjmeydE/wEDoi5oX2toX2toX/vaV2fbQPtaQ/taQ/va17462wba1xraN/us/IkF4qAhA2Of8++NFRafP7772eXj3WnT49HnJsUPrn8sOjpKW1hTPJ/TvpUmN910U/ztb38rbUYtuPWWm2PKO1Ni1EWj48CDvxUjTzk56oT2tYb2tYb2ta99dbYNtK81tK81tK997auzbaB9raF9s8feGwyIY7f9VMzT85/h7NGfWyGGXz8h9jrv3pj0ztTYauXFSpsobUTRSpMdd9wxLrzwwhg3blwcffTRMWbMmLj44otj3nnnjSuvvDJVliy22GJxzDHHxFVXXZW+v8Yaa8Rvf/vbuPzyy6OjoyO++tWvxsYbbxw77LBD9OvXL9Zaa6244447YplllomHHnooNtlkk3jiiSfS50MPPTQ222yzOOOMM+L2229PNhx55JEzVK9ccskl6d/u1q1b7L777rHtttvGzjvvnP49ql023HDDOPjggwuOWsT9990b622wYfq8yqdXjYcffijqhPa1hva1hva1r311tg20rzW0rzW0r33tq7NtoH2toX2zx9OvvBUHX/xgnLT9Sun3iy4wTzz49Ovp8wMTX4tNlv9YXDfu+cJWSrtQVDRZc80144EHHoh77rknevToEa+88koSPJZffvk466yzYr755ovddtst3nnnnfjCF74QAwcOTH8PUQOxBVGFP99oo43Sf4sYsuiii8bvfve7GDJkSBx++OGx7rrrxm233RYTJ06Mn/3sZ7HEEkvE+PHjkzjz8ssvx4EHHhi/+MUvkj38G/zbCCeUoiHEbL755vHiiy/GyJEjk4AzePDg4qLJ5MmTYv75+7z3+x7de8TUqVOjZ896nLbSvtbQvtbQvva1r862gfa1hva1hva1r311tg20rzW0b/a4efzfY4l+vd77/TOvvhVrfLJf3Pvka7HxcovEvHP1KGqftBdF33YqRO666654/PHHY6eddkqf33zzzVhqqaXiiCOOiN69eydhA3Ek88wzz6SvvfbaK/3+rbfeildffTV69eqVBJPMoEGD0rm7xRdfPBZYYIGYf/75Y8qUKanqhIqRPfbYI/291157bYZ/e7nllntvEaC65Nlnn00VLp/4xCfS9/r0+deiUYrevfvE5MmT3/v99I7pxReuRrSvNbSvNbSvfe2rs22gfa2hfa2hfe1rX51tA+1rDe2bMxx91fg4fKtB8eVNusd9T70WU6ba0OT96GZTk87V02T11VePP/7xj0ncWHvtteOcc85Jx2++//3vx4gRI9KRnWnTpqVjOByX4dePf/zjseyyy8YFF1yQKke23nrr6Nu3b3Tv/uH+VwYMGJB+7qhRo1I1C/99hn97woQJST1FYOEz1SX87Dqx2mqrx+1jx6bP4x58IAYOHBR1QvtaQ/taQ/va17462wba1xra1xra17721dk20L7W0L45w4bLLRJHXP5w7Pez+6LvvHPFnX95ubRJ0kYUlQnnmmuuJHisssoq6ejN888/n3qQcByGozFUdSyyyCLx0ksvpSM7p512Wqy44ooxdOjQ2HXXXePtt99Ox3Y4svNh4b+naoRjPVS17L///u/92cILLxzbb799+jOEE6pZqFKpG5sNHhJ33vn7GPbFXZKQdNwJJ0Wd0L7W0L7W0L72ta/OtoH2tYb2tYb2ta99dbYNtK81tG/OMPHlN+OcvVaPt9+dFn/466tx++OKJjLn6NbB2y+V8fbU0haIiIiIiIiUY63jbo46M+64wdGuTJ7SucL/3nOXP/XRaa4cFhERERERERGpEkUTEREREREREZEmKJqIiIiIiIiIiDShfvdFiYiIiIiIiMgcp3yHkM6HlSYiIiIiIiIiIk1QNBERERERERERaYLHc0RERERERES6Ap7PmWWsNBERERERERERaYKiiYiIiIiIiIhIExRNRERERERERESaYE8TERERERERkS5AN5uazDJWmoiIiIiIiIiINEHRRERERERERESkCR7PEREREREREekCdPN0ziyjaCIiIiIiIiIibcPUqVPj0EMPjRdeeCH69+8fJ554YvTo0WO2/i2P54iIiIiIiIhI23DjjTfGgAED4qKLLopFF100brvtttn+t6w0EREREREREZHasfnmm3/gn99yyy1Nv//ggw/Gpptumj6vu+66ceutt8bgwYNnywZFk4rp5YiLiIiIiEgXZtxxsxe8Sut0lXh00qRJ0bt37/R5vvnmi8mTJ8/2v9VFhkxEREREREREOhO3vE8lyX+iT58+8eabb6bPCCZZQJkd7GkiIiIiIiIiIm3DyiuvHHfeeWf6fNddd8Wqq6462/+WoomIiIiIiIiItA1Dhw6NZ555JnbZZZeYOHFibLHFFrP9b3Xr6OjomKPWiYiIiIiIiIi0AVaaiIiIiIiIiIg0QdFERERERERERKQJiiYiIiIiIiIiIk1QNBERERERERERaYKiiYiIiIiIiIhIExRNRERERERERESaoGgiIiIiIiIiItIERRMRERERERERkSYomoiIiIiIiIiINEHRREQ+kI6OjtImSBdj+vTp//Y938NZ46233iptgkhtcT0REZFZQdGkxtR9U28W2NSJOts3bdq09z5PnTq1lvY+8cQTKfDq1q1b1H1+1G2uND7LutlWd5gb3bt3T+P25JNPxuuvv56+z3tYl7FsnL915IYbboiRI0fG5MmTo27kseNZ5udZt7WvzuTxy/tG3Wg2N+r0fBvfv85AZ7GzLtR9ba6z3zKzTXWat83sqeP4SXujaFLjhT8Hq1OmTIm6Bjavvvpq3HnnnVE3WFyxD55++ulaLbLY1qNHj/TrD37wg/j+978fzz//fLK3TpvUU089Ffvuu2986UtfipdeeqlWtuX58c4776T5USdhJ797zI2//e1vtcz4Y+O3vvWt+PWvfx0vvPBCreZHnhuHHHJI/OxnP4uzzz47brzxxvRndXjOjfP3Jz/5SfzlL3+JOvHb3/42llhiifiv//qvOOecc2LSpElRF3i/GLtnn302iTqnnHJKEmfzWl0XeLannXZaXHvttbXa3/K7x35xxhlnpGddp7nLupznxrnnnhuXXnppWv+yCFqX8fv73/8eRx99dBo/1uk6kgXPOonFjeN49913x6OPPhp1onFtHj16dDzwwANRJ7ArP89XXnklfdXRPvYMRNm333476uZX/eMf/4jx48fXdm5Ie9OtwzeudjQ6HieddFJaKNZcc83YaKONYp555om6gON25JFHxrvvvhurrrpqfP3rX6+FfXlx5dU+8MAD44033kjj97WvfS39Od8vHXxhw6GHHhqf+tSn0sY0duzY+OEPf5gCnUbBp5RteXwIam6++ea45JJLYsEFFyxuWyPPPfdcCmx69+4d66yzTqyxxhqx0EILFbUpj8/LL7+c3r0+ffrEuuuuGxtvvHF88pOfjLpw1FFHxdJLLx2rr756spX1BhtL8tprr0W/fv3S+4dQwrqy8847xze+8Y3YbLPNYuutt05iQB3Axq985SvpnVt00UXTOC688MIx77zzFrULgZjKnOWWWy4efPDBeOSRR5Lgud9++6V3sQ7gkH/1q19NYuzvf//7uO++++J///d/a/ds+/fvn2wiwF5ppZViq622ijrAfrbPPvvE3nvvnd435sxqq61Wq73tmGOOSZ9555555pmUHMDWOuwfjN+JJ56Y5ivPdoMNNki+Vem9I8MYHXDAAfHxj3882XrcccfF3HPPXYtnm+3D11tggQWSTYMHD44hQ4akP6uDjdjA/MAnYI/LX3WB8TvooIPiE5/4RBIAGDvev7pAEgX/AN8Uv+Czn/1scd+l0a9i7EiUYV9eZ+rw3knXoB7Rj7wHmWkWKoSTb3/727HUUkvFWmutlbJy99xzT9QFAhoCGyoRcEDIBI8YMaJ41qZRMLn88suTM0m29a677oqf/vSn6e+UWlwb9cmHH344Pvaxj8WwYcOSzThIfM4VJyXBzjfffDM920033TSJO4cddlgKxti06gAVJt/5znfic5/7XJoj5513XkyYMCH9WUkdOGdCqEDA2cDhJWN4xx131KYiAYeDQIZ58OMf/zgF2rfeemvRZ0twwDwl84ttgwYNSgEX2eC99torzY+HHnoo6lL2TXUE4OxSrcM4UpVQknHj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9dev3CYR6VwomoiISKcUTrghh1t0aEqXs9QeyxERqR80/C1RTfR+TWk32GCDdIMU4omIyH9C0URERDolNI/k2khv4BIRkQ/TlHbxxRdPV4Rz49oaa6xR2jQR6SQomoiIiIiISFtXJ9KUllvYONb5+c9/3spEEfnQ2LlHRERERES6RFPaF154ofKmtCLSuanuzi8REREREZGC1yBz61rfvn1LmyMinQiP54iIiIiISJegVFNaEem8KJqIiIiIiIiIiDTB4zkiIiIiIiIiIk1QNBERERERERERaYKiiYiIiIiIiIhIExRNREREuhB33313rLvuurHHHnukr5122ilGjRo1y//OiBEj4sorr4xHHnkkfvSjH73v37vpppvSFZ8fhrFjx8YRRxwxy7aIiIiIfFT0/Mj+ZREREakl66yzTpx66qnp85QpU2Lo0KGx7bbbpqs4Z5UVVlghfb0fF1xwQRx77LGx6KKLtmSziIiISAkUTURERLowkyZNiu7du8dee+0VSy65ZLz++utx9tlnJ6HjqaeeiunTp8dBBx0Ua6+9dtx4441x5plnxkILLRTvvvtuLL300qly5ZJLLkkizGWXXRYXX3xx+m8222yzWGWVVVIlyuGHHx4XXXRRjB49Oq699tro1q1bbLXVVjFs2LD4y1/+EkceeWTMO++86atv376lh0RERETkPRRNREREuhh33XVXOpqDeDHXXHPFUUcdFeeee25ss802MWTIkCRwLLjggnHSSSfFq6++GrvvvntcffXVcfLJJ6cjOf369Yv9999/hn/z5ZdfjnPOOSd++ctfxjzzzBMjR46MNddcM1WhIMBMnDgxxowZk/5t2HvvvWODDTaI4cOHxze+8Y1Yf/31k1jzxBNPFBoVERERkX9H0URERKQLH8/JIJostdRS6fOECRPi3nvvjXHjxqXfT506NV588cVUBYKYAqutttoM//3TTz8dAwcOjF69eqXfH3LIITP8Of/ms88+mypagIoWKlmefPLJVJECq6++uqKJiIiI1AobwYqIiEiCyhPg2M3WW2+dGsRSPULPk0UWWSTeeOONeOWVV9Lf+dOf/jTDf9u/f/8keNAjBageoQEs/2ZHR0f6N5dddtnU44R/d7vttovlllsulllmmbj//vvTf/PQQw9V/v8sIiIi8kFYaSIiIiIzsMsuu8R3v/vddCyHnie77bZbzD333HH00UfHPvvskypOevac0YWgz8l+++2X/huEkk033TQ1f6Ui5bDDDouf/vSn6daeXXfdNQkrVJfw59yWQ8+T8847L/0bHO0RERERqQvdOkj/iIiIiIiIiIjIDHg8R0RERERERESkCYomIiIiIiIiIiJNUDQREREREREREWmCoomIiIiIiIiISBMUTUREREREREREmqBoIiIiIiIiIiLSBEUTEREREREREZEmKJqIiIiIiIiIiDRB0UREREREREREpAmKJiIiIiIiIiIiTVA0ERERERERERGJf+f/AR6LrxzPe+HZAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 1200x1000 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate confusion matrix\n",
    "cm = confusion_matrix(y_test, y_pred)\n",
    "labels = label_encoder.classes_\n",
    "\n",
    "# Plot using seaborn heatmap\n",
    "plt.figure(figsize=(12, 10))\n",
    "sns.heatmap(cm, annot=True, fmt='d', xticklabels=labels, yticklabels=labels, cmap=\"Blues\")\n",
    "plt.xlabel('Predicted')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix')\n",
    "plt.xticks(rotation=45, ha='right')\n",
    "plt.yticks(rotation=0)\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
